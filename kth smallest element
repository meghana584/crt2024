#include <stdio.h>
#include <stdlib.h>


int partition(int arr[], int low, int high) {
    int pivot = arr[high];
    int i = low - 1;

    for (int j = low; j <= high - 1; j++) {
        if (arr[j] < pivot) {
            i++;
    
            int temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
        }
    }

    int temp = arr[i + 1];
    arr[i + 1] = arr[high];
    arr[high] = temp;

    return (i + 1);
}


void quickSort(int arr[], int low, int high) {
    if (low < high) {
        int pi = partition(arr, low, high);

        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}

int main() {
    int numOfStocks, k;
    
    scanf("%d %d", &numOfStocks, &k);

    int *stocks = (int *)malloc(numOfStocks * sizeof(int));

    
    for (int i = 0; i < numOfStocks; i++) {
        scanf("%d", &stocks[i]);
    }

    
    quickSort(stocks, 0, numOfStocks - 1);


    printf("%d\n", stocks[k - 1]);

    free(stocks); 
    return 0;
}
